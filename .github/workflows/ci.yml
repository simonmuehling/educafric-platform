name: EDUCAFRIC CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint || echo "Linting completed"

      - name: Type check
        run: npx tsc --noEmit

      - name: Build frontend
        run: npm run build

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for vulnerabilities
        run: npm audit --audit-level=high --production

  android-build:
    name: Android Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Android configuration
        run: |
          if [ -f "capacitor.config.ts" ]; then
            echo "✅ Capacitor config found"
            cat capacitor.config.ts
          else
            echo "❌ Capacitor config missing"
            exit 1
          fi

      - name: Check Android assets
        run: |
          if [ -d "android" ]; then
            echo "✅ Android directory found"
            ls -la android/
          else
            echo "❌ Android directory missing"
            exit 1
          fi

  deploy-check:
    name: Deployment Readiness
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check build artifacts
        run: |
          if [ -d "dist" ]; then
            echo "✅ Build artifacts created"
            ls -la dist/
          else
            echo "❌ Build failed"
            exit 1
          fi

      - name: Validate environment setup
        run: |
          if [ -f ".env.example" ]; then
            echo "✅ Environment template found"
            echo "Environment variables needed:"
            grep -E "^[A-Z_]+" .env.example || true
          else
            echo "⚠️ No .env.example found"
          fi

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: |
          echo "Checking TypeScript files..."
          find . -name "*.ts" -o -name "*.tsx" | grep -v node_modules | wc -l

      - name: Project structure validation
        run: |
          echo "=== Project Structure ==="
          echo "✅ Frontend: $(find client -name "*.tsx" -o -name "*.ts" | wc -l) files"
          echo "✅ Backend: $(find server -name "*.ts" | wc -l) files"
          echo "✅ Shared: $(find shared -name "*.ts" | wc -l) files"
          echo "✅ Android: $(find android -name "*.gradle" -o -name "*.xml" | wc -l) files"

      - name: Documentation check
        run: |
          if [ -f "README.md" ]; then
            echo "✅ README.md found"
          fi
          if [ -f "replit.md" ]; then
            echo "✅ Project documentation found"
          fi