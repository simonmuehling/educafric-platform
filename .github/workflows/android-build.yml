name: Build Android APK - EDUCAFRIC v4

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - debug
      version_name:
        description: 'Version name (e.g., 2.0)'
        required: true
        default: '2.0'
      version_code:
        description: 'Version code (integer)'
        required: true
        default: '4'

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      env:
        JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        SKIP_JDK_VERSION_CHECK: true
      
    - name: Install dependencies
      run: |
        npm ci
        npm install -g @capacitor/cli
        
    - name: Create environment file
      run: |
        echo "VITE_APP_TITLE=EDUCAFRIC" >> .env
        echo "VITE_APP_VERSION=${{ github.event.inputs.version_name }}" >> .env
        echo "VITE_ENVIRONMENT=production" >> .env
        echo "VITE_FIREBASE_API_KEY=demo-key" >> .env
        echo "VITE_FIREBASE_PROJECT_ID=educafric-demo" >> .env
        echo "VITE_FIREBASE_APP_ID=demo-app-id" >> .env
        echo "VITE_STRIPE_PUBLIC_KEY=pk_test_demo" >> .env
        
    - name: Build web application
      run: |
        npm run build
        echo "✅ Web build completed successfully"
        ls -la dist/
        
    - name: Update Android version
      run: |
        # Update version in build.gradle
        sed -i "s/versionCode .*/versionCode ${{ github.event.inputs.version_code }}/" android/app/build.gradle
        sed -i "s/versionName .*/versionName \"${{ github.event.inputs.version_name }}\"/" android/app/build.gradle
        
        # Update version in capacitor.config.ts
        sed -i "s/\"version\": \".*\"/\"version\": \"${{ github.event.inputs.version_name }}\"/" capacitor.config.ts
        
        echo "✅ Android version updated to ${{ github.event.inputs.version_name }} (code: ${{ github.event.inputs.version_code }})"
        
    - name: Sync Capacitor
      run: |
        npx cap sync android
        echo "✅ Capacitor sync completed"
        
    - name: Grant execute permission for gradlew
      run: |
        cd android
        chmod +x gradlew
        
    - name: Create debug keystore
      if: github.event.inputs.build_type == 'debug'
      run: |
        mkdir -p ~/.android
        keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
        
    - name: Build Android Debug APK
      if: github.event.inputs.build_type == 'debug'
      run: |
        cd android
        ./gradlew assembleDebug --stacktrace
        echo "✅ Debug APK build completed"
        
    - name: Build Android Release AAB
      if: github.event.inputs.build_type == 'release'
      run: |
        cd android
        ./gradlew bundleRelease --stacktrace
        echo "✅ Release AAB build completed"
        
    - name: List build outputs
      run: |
        echo "🔍 Build outputs:"
        find android/app/build/outputs -name "*.apk" -o -name "*.aab" | while read file; do
          echo "📱 $(basename "$file") - $(du -h "$file" | cut -f1)"
        done
        
    - name: Upload Debug APK
      if: github.event.inputs.build_type == 'debug'
      uses: actions/upload-artifact@v4
      with:
        name: educafric-debug-v${{ github.event.inputs.version_name }}-${{ github.event.inputs.version_code }}
        path: android/app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload Release AAB
      if: github.event.inputs.build_type == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: educafric-release-v${{ github.event.inputs.version_name }}-${{ github.event.inputs.version_code }}
        path: android/app/build/outputs/bundle/release/*.aab
        retention-days: 90
        
    - name: Create Release Summary
      run: |
        echo "## 🚀 EDUCAFRIC Android Build v${{ github.event.inputs.version_name }} Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Name:** ${{ github.event.inputs.version_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Code:** ${{ github.event.inputs.version_code }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type:** ${{ github.event.inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Successfully Built Features" >> $GITHUB_STEP_SUMMARY
        echo "- Multi-role authentication system (6 user types)" >> $GITHUB_STEP_SUMMARY
        echo "- Bilingual French/English interface" >> $GITHUB_STEP_SUMMARY
        echo "- Document management with PDF generation" >> $GITHUB_STEP_SUMMARY
        echo "- Geolocation tracking for student safety" >> $GITHUB_STEP_SUMMARY
        echo "- Payment integration with African methods" >> $GITHUB_STEP_SUMMARY
        echo "- SMS/Email notification system" >> $GITHUB_STEP_SUMMARY
        echo "- Portrait-only mobile optimization" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Deployment Ready" >> $GITHUB_STEP_SUMMARY
        echo "Your EDUCAFRIC Android application is ready for:" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.build_type }}" = "debug" ]; then
          echo "- Direct installation for testing" >> $GITHUB_STEP_SUMMARY
          echo "- Internal distribution" >> $GITHUB_STEP_SUMMARY
        else
          echo "- Google Play Store submission" >> $GITHUB_STEP_SUMMARY
          echo "- Production deployment" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Download the build artifacts from the Actions tab above." >> $GITHUB_STEP_SUMMARY